[
  "@generated",
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)bounds" },
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)frame" },
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)setAlpha:" },
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)setBackgroundColor:" },
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)setCenter:" },
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)setFrame:" },
  { "key": "c:@CM@UIKit@@objc(cs)UIView(im)setMultipleTouchEnabled:" },
  { "key": "c:@E@UIGestureRecognizerState@UIGestureRecognizerStateBegan" },
  { "key": "c:@E@UIGestureRecognizerState@UIGestureRecognizerStateCancelled" },
  { "key": "c:@E@UIGestureRecognizerState@UIGestureRecognizerStateChanged" },
  { "key": "c:@E@UIGestureRecognizerState@UIGestureRecognizerStateEnded" },
  { "key": "c:@E@UIGestureRecognizerState@UIGestureRecognizerStateFailed" },
  {
    "key": "c:@E@UIViewKeyframeAnimationOptions@UIViewKeyframeAnimationOptionAllowUserInteraction"
  },
  {
    "key": "c:@E@UIViewKeyframeAnimationOptions@UIViewKeyframeAnimationOptionCalculationModeLinear"
  },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasBallView" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasBallView(im)initWithCoder:" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasBallView(im)initWithFrame:" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasBallView(im)layoutSubviews" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView" },
  {
    "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)addOrUpdateBallWithId:position:altitude:color:supportsUpdate:"
  },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)delegate" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)initWithCoder:" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)initWithFrame:" },
  {
    "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)performRainbowAnimationWithId:completion:"
  },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)removeAll" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)removeBallWithId:" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(im)setDelegate:" },
  { "key": "c:@M@CIBCanvas@objc(cs)CIBCanvasView(py)delegate" },
  { "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate" },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didDoubleTapBallId:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didDoubleTapPosition:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didLongPressBallId:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didPanBallId:position:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didTapBallId:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didTapPosition:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didTripleTapBallId:"
  },
  {
    "key": "c:@M@CIBCanvas@objc(pl)CIBCanvasViewDelegate(im)canvasView:didTripleTapPosition:"
  },
  { "key": "c:@M@UIKit" },
  { "key": "c:@S@CGPoint" },
  { "key": "c:@S@CGRect" },
  { "key": "c:@S@CGRect@FI@origin" },
  { "key": "c:@S@CGRect@FI@size" },
  { "key": "c:@S@CGSize" },
  { "key": "c:@S@CGSize@FI@width" },
  { "key": "c:@T@NSTimeInterval" },
  { "key": "c:objc(cs)CALayer(im)setBorderColor:" },
  { "key": "c:objc(cs)CALayer(im)setBorderWidth:" },
  { "key": "c:objc(cs)CALayer(im)setCornerRadius:" },
  { "key": "c:objc(cs)CALayer(im)setMasksToBounds:" },
  { "key": "c:objc(cs)CALayer(py)borderColor" },
  { "key": "c:objc(cs)CALayer(py)borderWidth" },
  { "key": "c:objc(cs)CALayer(py)cornerRadius" },
  { "key": "c:objc(cs)CALayer(py)masksToBounds" },
  { "key": "c:objc(cs)NSCoder" },
  { "key": "c:objc(cs)UIColor" },
  { "key": "c:objc(cs)UIColor(cm)blackColor" },
  { "key": "c:objc(cs)UIColor(cm)blueColor" },
  { "key": "c:objc(cs)UIColor(cm)clearColor" },
  { "key": "c:objc(cs)UIColor(cm)grayColor" },
  { "key": "c:objc(cs)UIColor(cm)greenColor" },
  { "key": "c:objc(cs)UIColor(cm)lightGrayColor" },
  { "key": "c:objc(cs)UIColor(cm)orangeColor" },
  { "key": "c:objc(cs)UIColor(cm)purpleColor" },
  { "key": "c:objc(cs)UIColor(cm)redColor" },
  { "key": "c:objc(cs)UIColor(cm)whiteColor" },
  { "key": "c:objc(cs)UIColor(cm)yellowColor" },
  { "key": "c:objc(cs)UIColor(cpy)blackColor" },
  { "key": "c:objc(cs)UIColor(cpy)blueColor" },
  { "key": "c:objc(cs)UIColor(cpy)clearColor" },
  { "key": "c:objc(cs)UIColor(cpy)grayColor" },
  { "key": "c:objc(cs)UIColor(cpy)greenColor" },
  { "key": "c:objc(cs)UIColor(cpy)lightGrayColor" },
  { "key": "c:objc(cs)UIColor(cpy)orangeColor" },
  { "key": "c:objc(cs)UIColor(cpy)purpleColor" },
  { "key": "c:objc(cs)UIColor(cpy)redColor" },
  { "key": "c:objc(cs)UIColor(cpy)whiteColor" },
  { "key": "c:objc(cs)UIColor(cpy)yellowColor" },
  { "key": "c:objc(cs)UIColor(im)CGColor" },
  { "key": "c:objc(cs)UIColor(im)initWithWhite:alpha:" },
  { "key": "c:objc(cs)UIColor(py)CGColor" },
  { "key": "c:objc(cs)UIGestureRecognizer(im)initWithTarget:action:" },
  { "key": "c:objc(cs)UIGestureRecognizer(im)locationInView:" },
  { "key": "c:objc(cs)UIGestureRecognizer(im)requireGestureRecognizerToFail:" },
  { "key": "c:objc(cs)UIGestureRecognizer(im)state" },
  { "key": "c:objc(cs)UIGestureRecognizer(im)view" },
  { "key": "c:objc(cs)UIGestureRecognizer(py)state" },
  { "key": "c:objc(cs)UIGestureRecognizer(py)view" },
  { "key": "c:objc(cs)UILabel" },
  { "key": "c:objc(cs)UILabel(im)setText:" },
  { "key": "c:objc(cs)UILabel(im)setTextColor:" },
  { "key": "c:objc(cs)UILabel(py)text" },
  { "key": "c:objc(cs)UILabel(py)textColor" },
  { "key": "c:objc(cs)UILongPressGestureRecognizer" },
  { "key": "c:objc(cs)UIPanGestureRecognizer" },
  { "key": "c:objc(cs)UITapGestureRecognizer" },
  { "key": "c:objc(cs)UITapGestureRecognizer(im)setNumberOfTapsRequired:" },
  { "key": "c:objc(cs)UITapGestureRecognizer(py)numberOfTapsRequired" },
  { "key": "c:objc(cs)UIView" },
  {
    "key": "c:objc(cs)UIView(cm)addKeyframeWithRelativeStartTime:relativeDuration:animations:"
  },
  {
    "key": "c:objc(cs)UIView(cm)animateKeyframesWithDuration:delay:options:animations:completion:"
  },
  { "key": "c:objc(cs)UIView(im)addGestureRecognizer:" },
  { "key": "c:objc(cs)UIView(im)addSubview:" },
  { "key": "c:objc(cs)UIView(im)init" },
  { "key": "c:objc(cs)UIView(im)initWithFrame:" },
  { "key": "c:objc(cs)UIView(im)layer" },
  { "key": "c:objc(cs)UIView(im)layoutSubviews" },
  { "key": "c:objc(cs)UIView(im)removeFromSuperview" },
  { "key": "c:objc(cs)UIView(im)setLayer:" },
  { "key": "c:objc(cs)UIView(im)setNeedsLayout" },
  { "key": "c:objc(cs)UIView(im)sizeToFit" },
  { "key": "c:objc(cs)UIView(py)alpha" },
  { "key": "c:objc(cs)UIView(py)backgroundColor" },
  { "key": "c:objc(cs)UIView(py)bounds" },
  { "key": "c:objc(cs)UIView(py)center" },
  { "key": "c:objc(cs)UIView(py)frame" },
  { "key": "c:objc(cs)UIView(py)layer" },
  { "key": "c:objc(cs)UIView(py)multipleTouchEnabled" },
  { "key": "c:objc(pl)NSCoding(im)encodeWithCoder:" },
  { "key": "c:objc(pl)NSCoding(im)initWithCoder:" },
  { "key": "c:objc(pl)NSObject" },
  { "key": "c:objc(pl)NSObject(im)autorelease" },
  { "key": "c:objc(pl)NSObject(im)class" },
  { "key": "c:objc(pl)NSObject(im)conformsToProtocol:" },
  { "key": "c:objc(pl)NSObject(im)isEqual:" },
  { "key": "c:objc(pl)NSObject(im)isKindOfClass:" },
  { "key": "c:objc(pl)NSObject(im)isMemberOfClass:" },
  { "key": "c:objc(pl)NSObject(im)isProxy" },
  { "key": "c:objc(pl)NSObject(im)performSelector:" },
  { "key": "c:objc(pl)NSObject(im)performSelector:withObject:" },
  { "key": "c:objc(pl)NSObject(im)performSelector:withObject:withObject:" },
  { "key": "c:objc(pl)NSObject(im)release" },
  { "key": "c:objc(pl)NSObject(im)respondsToSelector:" },
  { "key": "c:objc(pl)NSObject(im)retain" },
  { "key": "c:objc(pl)NSObject(im)retainCount" },
  { "key": "c:objc(pl)NSObject(im)self" },
  { "key": "c:objc(pl)NSObject(im)zone" },
  { "key": "c:objc(pl)NSObject(py)debugDescription" },
  { "key": "c:objc(pl)NSObject(py)description" },
  { "key": "c:objc(pl)NSObject(py)hash" },
  { "key": "c:objc(pl)NSObject(py)superclass" },
  {
    "key": "c:objc(pl)UIAccessibilityIdentification(py)accessibilityIdentifier"
  },
  {
    "key": "c:objc(pl)UIActivityItemsConfigurationProviding(py)activityItemsConfiguration"
  },
  { "key": "c:objc(pl)UIAppearance(cm)appearance" },
  { "key": "c:objc(pl)UIAppearance(cm)appearanceForTraitCollection:" },
  {
    "key": "c:objc(pl)UIAppearance(cm)appearanceForTraitCollection:whenContainedInInstancesOfClasses:"
  },
  {
    "key": "c:objc(pl)UIAppearance(cm)appearanceWhenContainedInInstancesOfClasses:"
  },
  { "key": "c:objc(pl)UICoordinateSpace(im)convertPoint:fromCoordinateSpace:" },
  { "key": "c:objc(pl)UICoordinateSpace(im)convertPoint:toCoordinateSpace:" },
  { "key": "c:objc(pl)UICoordinateSpace(im)convertRect:fromCoordinateSpace:" },
  { "key": "c:objc(pl)UICoordinateSpace(im)convertRect:toCoordinateSpace:" },
  { "key": "c:objc(pl)UICoordinateSpace(py)bounds" },
  { "key": "c:objc(pl)UIDynamicItem(py)bounds" },
  { "key": "c:objc(pl)UIDynamicItem(py)center" },
  { "key": "c:objc(pl)UIDynamicItem(py)collisionBoundingPath" },
  { "key": "c:objc(pl)UIDynamicItem(py)collisionBoundsType" },
  { "key": "c:objc(pl)UIDynamicItem(py)transform" },
  {
    "key": "c:objc(pl)UIFocusEnvironment(im)didUpdateFocusInContext:withAnimationCoordinator:"
  },
  { "key": "c:objc(pl)UIFocusEnvironment(im)setNeedsFocusUpdate" },
  { "key": "c:objc(pl)UIFocusEnvironment(im)shouldUpdateFocusInContext:" },
  { "key": "c:objc(pl)UIFocusEnvironment(im)updateFocusIfNeeded" },
  { "key": "c:objc(pl)UIFocusEnvironment(py)focusGroupIdentifier" },
  { "key": "c:objc(pl)UIFocusEnvironment(py)focusItemContainer" },
  { "key": "c:objc(pl)UIFocusEnvironment(py)parentFocusEnvironment" },
  { "key": "c:objc(pl)UIFocusEnvironment(py)preferredFocusEnvironments" },
  { "key": "c:objc(pl)UIFocusEnvironment(py)preferredFocusedView" },
  { "key": "c:objc(pl)UIFocusItem(py)canBecomeFocused" },
  { "key": "c:objc(pl)UIFocusItem(py)focusEffect" },
  { "key": "c:objc(pl)UIFocusItem(py)focusGroupPriority" },
  { "key": "c:objc(pl)UIFocusItem(py)focusItemDeferralMode" },
  { "key": "c:objc(pl)UIFocusItem(py)frame" },
  { "key": "c:objc(pl)UIFocusItem(py)isTransparentFocusItem" },
  { "key": "c:objc(pl)UIFocusItemContainer(im)focusItemsInRect:" },
  { "key": "c:objc(pl)UIFocusItemContainer(py)coordinateSpace" },
  { "key": "c:objc(pl)UILargeContentViewerItem(py)largeContentImage" },
  { "key": "c:objc(pl)UILargeContentViewerItem(py)largeContentImageInsets" },
  { "key": "c:objc(pl)UILargeContentViewerItem(py)largeContentTitle" },
  { "key": "c:objc(pl)UILargeContentViewerItem(py)scalesLargeContentImage" },
  { "key": "c:objc(pl)UILargeContentViewerItem(py)showsLargeContentViewer" },
  { "key": "c:objc(pl)UIPasteConfigurationSupporting(py)pasteConfiguration" },
  {
    "key": "c:objc(pl)UIPopoverPresentationControllerSourceItem(im)frameInView:"
  },
  {
    "key": "c:objc(pl)UITraitChangeObservable(im)registerForTraitChanges:withAction:"
  },
  {
    "key": "c:objc(pl)UITraitChangeObservable(im)registerForTraitChanges:withHandler:"
  },
  {
    "key": "c:objc(pl)UITraitChangeObservable(im)registerForTraitChanges:withTarget:action:"
  },
  { "key": "c:objc(pl)UITraitChangeObservable(im)unregisterForTraitChanges:" },
  { "key": "c:objc(pl)UITraitEnvironment(im)traitCollectionDidChange:" },
  { "key": "c:objc(pl)UITraitEnvironment(py)traitCollection" },
  { "key": "c:objc(pl)UIUserActivityRestoring(im)restoreUserActivityState:" }
]